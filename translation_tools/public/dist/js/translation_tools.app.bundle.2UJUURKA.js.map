{
  "version": 3,
  "sources": ["../../../../../apps/translation_tools/translation_tools/public/js/app.js", "../../../../../apps/translation_tools/translation_tools/public/js/language_toggle.js"],
  "sourcesContent": ["frappe.provide('translation_tools');\n\ntranslation_tools.setup_integration_button = function () {\n  // console.log(\"Translation Tools: Checking for Integrations page\");\n\n  // Check if we're on the Integrations page\n  const currentPath = window.location.pathname;\n  const isIntegrationsPage =\n    currentPath === '/app/integrations' ||\n    currentPath.endsWith('/app/integrations') ||\n    (frappe.router &&\n      frappe.router.current_route &&\n      frappe.router.current_route.length > 0 &&\n      frappe.router.current_route[0] === 'Integrations');\n\n  // console.log(\"isIntegrationsPage\", isIntegrationsPage);\n\n  if (isIntegrationsPage) {\n    // console.log(\n    //   \"Translation Tools: On Integrations page, checking for existing link\"\n    // );\n\n    // First check if button already exists to avoid duplicates\n    if ($('#trigger-translation-tools').length > 0) return;\n\n    // Add a flag to the sessionStorage to prevent reload loops\n    if (sessionStorage.getItem('translation_tools_reload_executed')) {\n      // console.log(\"Translation Tools: Reload already executed, skipping\");\n\n      sessionStorage.removeItem('translation_tools_reload_executed');\n      return;\n    }\n\n    frappe.call({\n      method: 'translation_tools.api.integrations.check_translation_tools_link',\n      args: {},\n      callback: function (r) {\n        // console.log('Translation Tools: Link check response', r);\n\n        if (r.message && !r.message.link_exists) {\n          // console.log(\"Translation Tools: Link doesn't exist, adding button\");\n\n          var button = $(\n            \"<button class='btn btn-primary mt-3 mb-3' id='trigger-translation-tools'>Add Translation Tools to Integration</button>\"\n          );\n\n          button.on('click', function () {\n            frappe.call({\n              method:\n                'translation_tools.api.integrations.add_translation_tools_link_to_integrations',\n              args: {},\n              callback: function (r) {\n                // console.log('Translation Tools: Add link response', r);\n\n                if (r.message && r.message.success) {\n                  frappe.show_alert({\n                    message: __('Translation Tools link added successfully!'),\n                    indicator: 'green',\n                  });\n\n                  // Set a flag to prevent reload loops\n                  sessionStorage.setItem(\n                    'translation_tools_reload_executed',\n                    'true'\n                  );\n\n                  // Force a complete page reload rather than just refreshing\n                  setTimeout(function () {\n                    // frappe.ui.toolbar.clear_cache();\n                    window.location.reload(true); // True forces reload from server, not cache\n                  }, 1500);\n                } else {\n                  frappe.msgprint(\n                    __(\n                      'Error: ' +\n                        (r.message && r.message.error\n                          ? r.message.error\n                          : 'Unknown error')\n                    )\n                  );\n                }\n              },\n            });\n          });\n\n          // Add the button to various possible locations\n          setTimeout(function () {\n            var added = false;\n\n            // Try different places to add the button\n            if ($('.layout-main-section').length) {\n              $('.layout-main-section').prepend(button);\n              added = true;\n            } else if ($('.workspace-sidebar').length) {\n              $('.workspace-sidebar').prepend(button);\n              added = true;\n            } else if ($('.page-head').length) {\n              $('.page-head').append(button);\n              added = true;\n            }\n\n            if (!added) {\n              // console.log(\n              //   'No suitable container found, adding floating button'\n              // );\n              $('body').append(\n                \"<div style='position:fixed;top:100px;right:20px;z-index:9999;'>\" +\n                  button[0].outerHTML +\n                  '</div>'\n              );\n            }\n          }, 1000);\n        } else {\n          // console.log(\n          //   'Translation Tools: Link already exists or error occurred'\n          // );\n        }\n      },\n    });\n\n    // Clear Workspace Cache\n    // frappe.call({\n    //   method: \"translation_tools.api.integrations.clear_workspace_cache\",\n    //   callback: function () {\n    //     frappe.show_alert({\n    //       message: __(\n    //         \"Translation Tools link added and cache cleared. Refreshing...\"\n    //       ),\n    //       indicator: \"green\",\n    //     });\n\n    //     setTimeout(function () {\n    //       window.location.reload(true);\n    //     }, 1500);\n    //   },\n    // });\n  }\n};\n\n// Run when DOM is ready\n$(document).ready(function () {\n  // console.log('Translation Tools: Document ready');\n  setTimeout(translation_tools.setup_integration_button, 2000);\n});\n\n// Also run when route changes\n$(document).on('route_change', function () {\n  // console.log('Translation Tools: Route changed');\n  setTimeout(translation_tools.setup_integration_button, 2000);\n});\n", "frappe.provide('frappe.ui');\n\nfrappe.ui.language_toggle = class LanguageToggle {\n  constructor() {\n    this.languages = frappe.boot.languages || {\n      en: 'English',\n      th: '\u0E44\u0E17\u0E22',\n    };\n    this.current_language = frappe.boot.lang || 'en';\n    this.setup();\n  }\n\n  setup() {\n    if (!('desk' in frappe)) return;\n\n    this.create_toggle_element();\n    this.setup_events();\n  }\n\n  create_toggle_element() {\n    const toggle_items = Object.entries(this.languages)\n      .map(([code, label]) => {\n        const active = this.current_language === code ? 'active' : '';\n        return `\n          <li role=\"menuitem\">\n            <a href=\"#\" data-lang=\"${code}\" class=\"dropdown-item ${active}\">\n              ${label}\n            </a>\n          </li>`;\n      })\n      .join('');\n\n    const toggle_html = `\n      <li class=\"nav-item dropdown dropdown-language\">\n        <a class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">\n          \uD83C\uDF10 ${this.languages[this.current_language]}\n        </a>\n        <ul class=\"dropdown-menu dropdown-menu-right\" role=\"menu\">\n          ${toggle_items}\n        </ul>\n      </li>`;\n\n    const navbar = $('header.navbar .navbar-collapse .navbar-nav');\n    if (navbar.length) {\n      navbar.prepend(toggle_html);\n    }\n  }\n\n  setup_events() {\n    $('body').on('click', '.dropdown-language .dropdown-item', (e) => {\n      e.preventDefault();\n      const lang_code = $(e.currentTarget).data('lang');\n      if (lang_code && lang_code !== this.current_language) {\n        this.switch_language(lang_code);\n      }\n    });\n  }\n\n  switch_language(lang_code) {\n    frappe.show_alert({\n      message: __('Changing language to ') + this.languages[lang_code] + '...',\n      indicator: 'blue',\n    });\n\n    frappe.call({\n      method: 'frappe.client.set_value',\n      args: {\n        doctype: 'User',\n        name: frappe.session.user,\n        fieldname: 'language',\n        value: lang_code,\n      },\n      callback: () => {\n        frappe.show_alert({\n          message: __('Language updated. Reloading...'),\n          indicator: 'green',\n        });\n        setTimeout(() => window.location.reload(), 800);\n      },\n      error: () => {\n        frappe.show_alert({\n          message: __('Failed to update language.'),\n          indicator: 'red',\n        });\n      },\n    });\n  }\n};\n\n$(function () {\n  new frappe.ui.language_toggle();\n});\n"],
  "mappings": "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",
  "names": ["r"]
}
